/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.epic.perl.perl.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.epic.perl.perl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.epic.perl.perl.PerlPackage
 * @generated
 */
public class PerlAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PerlPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PerlAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = PerlPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PerlSwitch<Adapter> modelSwitch =
    new PerlSwitch<Adapter>()
    {
      @Override
      public Adapter casePerlModel(PerlModel object)
      {
        return createPerlModelAdapter();
      }
      @Override
      public Adapter caseAbstractElement(AbstractElement object)
      {
        return createAbstractElementAdapter();
      }
      @Override
      public Adapter caseToken(Token object)
      {
        return createTokenAdapter();
      }
      @Override
      public Adapter caseQuoteLikeToken(QuoteLikeToken object)
      {
        return createQuoteLikeTokenAdapter();
      }
      @Override
      public Adapter caseCommentToken(CommentToken object)
      {
        return createCommentTokenAdapter();
      }
      @Override
      public Adapter casePodToken(PodToken object)
      {
        return createPodTokenAdapter();
      }
      @Override
      public Adapter caseNumberToken(NumberToken object)
      {
        return createNumberTokenAdapter();
      }
      @Override
      public Adapter caseWordToken(WordToken object)
      {
        return createWordTokenAdapter();
      }
      @Override
      public Adapter caseOperatorToken(OperatorToken object)
      {
        return createOperatorTokenAdapter();
      }
      @Override
      public Adapter caseQuoteToken(QuoteToken object)
      {
        return createQuoteTokenAdapter();
      }
      @Override
      public Adapter caseDataToken(DataToken object)
      {
        return createDataTokenAdapter();
      }
      @Override
      public Adapter caseEndToken(EndToken object)
      {
        return createEndTokenAdapter();
      }
      @Override
      public Adapter caseBacktickQuoteLikeToken(BacktickQuoteLikeToken object)
      {
        return createBacktickQuoteLikeTokenAdapter();
      }
      @Override
      public Adapter caseWordsQuoteLikeToken(WordsQuoteLikeToken object)
      {
        return createWordsQuoteLikeTokenAdapter();
      }
      @Override
      public Adapter caseCommandQuoteLikeToken(CommandQuoteLikeToken object)
      {
        return createCommandQuoteLikeTokenAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.PerlModel <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.PerlModel
   * @generated
   */
  public Adapter createPerlModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.AbstractElement
   * @generated
   */
  public Adapter createAbstractElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.Token <em>Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.Token
   * @generated
   */
  public Adapter createTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.QuoteLikeToken <em>Quote Like Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.QuoteLikeToken
   * @generated
   */
  public Adapter createQuoteLikeTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.CommentToken <em>Comment Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.CommentToken
   * @generated
   */
  public Adapter createCommentTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.PodToken <em>Pod Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.PodToken
   * @generated
   */
  public Adapter createPodTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.NumberToken <em>Number Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.NumberToken
   * @generated
   */
  public Adapter createNumberTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.WordToken <em>Word Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.WordToken
   * @generated
   */
  public Adapter createWordTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.OperatorToken <em>Operator Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.OperatorToken
   * @generated
   */
  public Adapter createOperatorTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.QuoteToken <em>Quote Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.QuoteToken
   * @generated
   */
  public Adapter createQuoteTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.DataToken <em>Data Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.DataToken
   * @generated
   */
  public Adapter createDataTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.EndToken <em>End Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.EndToken
   * @generated
   */
  public Adapter createEndTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.BacktickQuoteLikeToken <em>Backtick Quote Like Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.BacktickQuoteLikeToken
   * @generated
   */
  public Adapter createBacktickQuoteLikeTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.WordsQuoteLikeToken <em>Words Quote Like Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.WordsQuoteLikeToken
   * @generated
   */
  public Adapter createWordsQuoteLikeTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.epic.perl.perl.CommandQuoteLikeToken <em>Command Quote Like Token</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.epic.perl.perl.CommandQuoteLikeToken
   * @generated
   */
  public Adapter createCommandQuoteLikeTokenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //PerlAdapterFactory
