/**
 * generated by Xtext 2.10.0-SNAPSHOT
 */
package org.epic.perl.perl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.epic.perl.perl.PerlPackage;
import org.epic.perl.perl.QuoteToken;
import org.epic.perl.perl.UseInclude;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Use Include</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.epic.perl.perl.impl.UseIncludeImpl#getPragmaOrPackage <em>Pragma Or Package</em>}</li>
 *   <li>{@link org.epic.perl.perl.impl.UseIncludeImpl#getStringArgument <em>String Argument</em>}</li>
 *   <li>{@link org.epic.perl.perl.impl.UseIncludeImpl#getQwArgument <em>Qw Argument</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UseIncludeImpl extends IncludeStatementImpl implements UseInclude
{
  /**
   * The default value of the '{@link #getPragmaOrPackage() <em>Pragma Or Package</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPragmaOrPackage()
   * @generated
   * @ordered
   */
  protected static final String PRAGMA_OR_PACKAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPragmaOrPackage() <em>Pragma Or Package</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPragmaOrPackage()
   * @generated
   * @ordered
   */
  protected String pragmaOrPackage = PRAGMA_OR_PACKAGE_EDEFAULT;

  /**
   * The cached value of the '{@link #getStringArgument() <em>String Argument</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringArgument()
   * @generated
   * @ordered
   */
  protected QuoteToken stringArgument;

  /**
   * The default value of the '{@link #getQwArgument() <em>Qw Argument</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQwArgument()
   * @generated
   * @ordered
   */
  protected static final String QW_ARGUMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getQwArgument() <em>Qw Argument</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQwArgument()
   * @generated
   * @ordered
   */
  protected String qwArgument = QW_ARGUMENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UseIncludeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PerlPackage.Literals.USE_INCLUDE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPragmaOrPackage()
  {
    return pragmaOrPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPragmaOrPackage(String newPragmaOrPackage)
  {
    String oldPragmaOrPackage = pragmaOrPackage;
    pragmaOrPackage = newPragmaOrPackage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerlPackage.USE_INCLUDE__PRAGMA_OR_PACKAGE, oldPragmaOrPackage, pragmaOrPackage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QuoteToken getStringArgument()
  {
    return stringArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStringArgument(QuoteToken newStringArgument, NotificationChain msgs)
  {
    QuoteToken oldStringArgument = stringArgument;
    stringArgument = newStringArgument;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PerlPackage.USE_INCLUDE__STRING_ARGUMENT, oldStringArgument, newStringArgument);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStringArgument(QuoteToken newStringArgument)
  {
    if (newStringArgument != stringArgument)
    {
      NotificationChain msgs = null;
      if (stringArgument != null)
        msgs = ((InternalEObject)stringArgument).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PerlPackage.USE_INCLUDE__STRING_ARGUMENT, null, msgs);
      if (newStringArgument != null)
        msgs = ((InternalEObject)newStringArgument).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PerlPackage.USE_INCLUDE__STRING_ARGUMENT, null, msgs);
      msgs = basicSetStringArgument(newStringArgument, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerlPackage.USE_INCLUDE__STRING_ARGUMENT, newStringArgument, newStringArgument));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getQwArgument()
  {
    return qwArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setQwArgument(String newQwArgument)
  {
    String oldQwArgument = qwArgument;
    qwArgument = newQwArgument;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PerlPackage.USE_INCLUDE__QW_ARGUMENT, oldQwArgument, qwArgument));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PerlPackage.USE_INCLUDE__STRING_ARGUMENT:
        return basicSetStringArgument(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PerlPackage.USE_INCLUDE__PRAGMA_OR_PACKAGE:
        return getPragmaOrPackage();
      case PerlPackage.USE_INCLUDE__STRING_ARGUMENT:
        return getStringArgument();
      case PerlPackage.USE_INCLUDE__QW_ARGUMENT:
        return getQwArgument();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PerlPackage.USE_INCLUDE__PRAGMA_OR_PACKAGE:
        setPragmaOrPackage((String)newValue);
        return;
      case PerlPackage.USE_INCLUDE__STRING_ARGUMENT:
        setStringArgument((QuoteToken)newValue);
        return;
      case PerlPackage.USE_INCLUDE__QW_ARGUMENT:
        setQwArgument((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PerlPackage.USE_INCLUDE__PRAGMA_OR_PACKAGE:
        setPragmaOrPackage(PRAGMA_OR_PACKAGE_EDEFAULT);
        return;
      case PerlPackage.USE_INCLUDE__STRING_ARGUMENT:
        setStringArgument((QuoteToken)null);
        return;
      case PerlPackage.USE_INCLUDE__QW_ARGUMENT:
        setQwArgument(QW_ARGUMENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PerlPackage.USE_INCLUDE__PRAGMA_OR_PACKAGE:
        return PRAGMA_OR_PACKAGE_EDEFAULT == null ? pragmaOrPackage != null : !PRAGMA_OR_PACKAGE_EDEFAULT.equals(pragmaOrPackage);
      case PerlPackage.USE_INCLUDE__STRING_ARGUMENT:
        return stringArgument != null;
      case PerlPackage.USE_INCLUDE__QW_ARGUMENT:
        return QW_ARGUMENT_EDEFAULT == null ? qwArgument != null : !QW_ARGUMENT_EDEFAULT.equals(qwArgument);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (pragmaOrPackage: ");
    result.append(pragmaOrPackage);
    result.append(", qwArgument: ");
    result.append(qwArgument);
    result.append(')');
    return result.toString();
  }

} //UseIncludeImpl
